"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[51559],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(r),b=a,f=c["".concat(u,".").concat(b)]||c[b]||m[b]||i;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=b;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},70288:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={title:"Write a Function To Swap Values - Python",date:new Date("2021-03-08T06:47:21.000Z"),authors:"kaustubh",slug:"/function-to-swap-values/"},l=void 0,o={permalink:"/blog/function-to-swap-values/",source:"@site/blog/2021-03-08-function-to-swap-values.md",title:"Write a Function To Swap Values - Python",description:"Let us see program to Function To Swap Values,",date:"2021-03-08T06:47:21.000Z",formattedDate:"March 8, 2021",tags:[],readingTime:.355,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Write a Function To Swap Values - Python",date:"2021-03-08T06:47:21.000Z",authors:"kaustubh",slug:"/function-to-swap-values/"},prevItem:{title:"Print Smallest And Largest Numbers From List - Python",permalink:"/blog/print-smallest-and-largest-numbers-from-list-python/"},nextItem:{title:"Get List as input And Print Odd Numbers from List",permalink:"/blog/print-odd-numbers-from-list/"}},u={authorsImageUrls:[void 0]},p=[{value:"Using Temporary Variable",id:"using-temporary-variable",level:3},{value:"Direct Method",id:"direct-method",level:3},{value:"Without Using Temporary Variable",id:"without-using-temporary-variable",level:3}],s={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Let us see program to Function To Swap Values,"),(0,a.kt)("h3",{id:"using-temporary-variable"},"Using Temporary Variable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="file.py"',title:'"file.py"'},"# method Using Temporary Variable\ndef swap(a,b):\n temp=a\n a=b\n b=temp\n return a,b\n")),(0,a.kt)("p",null,"Output"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb",metastring:'title="file.vb"',title:'"file.vb"'},"print(swap(7,3))\n>> (3,7)\n")),(0,a.kt)("h3",{id:"direct-method"},"Direct Method"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb",metastring:'title="file.vb"',title:'"file.vb"'},"\ndef swap(a,b):\n return b,a\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb",metastring:'title="file.vb"',title:'"file.vb"'},"print(swap(3,7))\n>>(7,3)\n")),(0,a.kt)("h3",{id:"without-using-temporary-variable"},"Without Using Temporary Variable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb",metastring:'title="file.vb"',title:'"file.vb"'},"def swap(a,b):\n a=b+a\n b=a-b\n a=a-b\n return a,b\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb",metastring:'title="file.vb"',title:'"file.vb"'},"print(swap(5,7))\n>>(7,5)\n\n")))}m.isMDXComponent=!0}}]);