"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[43482],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=u(n),f=a,g=l["".concat(p,".").concat(f)]||l[f]||m[f]||o;return n?r.createElement(g,i(i({ref:t},s),{},{components:n})):r.createElement(g,i({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[l]="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},30095:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={title:"Program for Stack Implementation using CPP",date:new Date("2020-08-16T12:15:00.000Z"),authors:"kaustubh",slug:"/program-for-stack-implementation-using-cpp/"},i=void 0,c={permalink:"/blog/program-for-stack-implementation-using-cpp/",source:"@site/blog/2020-08-16-program-for-stack-implementation-using-cpp.md",title:"Program for Stack Implementation using CPP",description:"",date:"2020-08-16T12:15:00.000Z",formattedDate:"August 16, 2020",tags:[],readingTime:.625,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Program for Stack Implementation using CPP",date:"2020-08-16T12:15:00.000Z",authors:"kaustubh",slug:"/program-for-stack-implementation-using-cpp/"},prevItem:{title:"Program for Linear Queue using Array in CPP",permalink:"/blog/program-for-linear-queue-using-array-in-cpp/"},nextItem:{title:"Program for Sparse Matrix in CPP",permalink:"/blog/program-for-sparse-matrix-in-cpp/"}},p={authorsImageUrls:[void 0]},u=[],s={toc:u},l="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Stack.cpp"',title:'"Stack.cpp"'},'  \n#include  \nusing namespace std;  \n  \nint s[10],i;  \nint top=-1;  \n int display()  \n {  \n cout<<"Stack:"< for(i=0;i<=top;i++)  \n {  \n cout<<"Element at position "< }  \n }  \n bool isfull()  \n {  \n if(top==9)  \n return 1;  \n else   \n return 0;  \n }  \n bool isempty()  \n {  \n if(top==-1)  \n return 1;  \n else  \n return 0;  \n }  \nint main()  \n{  \n int ch;  \n while(ch!=-1)  \n {  \n cout<<"n-----MENU-----"< cout<<"1.Push."< cout<<"2.Pop."< cout<<"3.Display"< cout<<"4.Exit"< cout<<"Enter a choice:";  \n cin>>ch;  \n switch(ch)  \n {  \n case 1:  \n if(isfull())  \n {  \n cout<<"Stack is full"< break;  \n }  \n else  \n {  \n top=top+1;  \n cout<<"Enter a character:";  \n cin>>s[i];  \n display();  \n if(isfull())  \n {  \n cout<<"Stack is Full!"< }  \n break;  \n }  \n case 2:  \n if(isempty())  \n {  \n cout<<"Stack is empty!"< break;  \n }   \n else  \n {  \n cout< top=top-1;  \n display();  \n if(isempty())  \n {  \n cout<<"Stack is Empty!"< }  \n break;  \n }  \n case 3:  \n if(isempty())  \n {  \n cout<<"Stack is empty!"< }  \n else  \n display();  \n break;  \n case 4:  \n exit(0);   \n }  \n }  \n}  \n  \n  \n  \n\n')))}m.isMDXComponent=!0}}]);