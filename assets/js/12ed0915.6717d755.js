"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[58582],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>y});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),m=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=m(e.components);return n.createElement(u.Provider,{value:r},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=m(t),f=a,y=p["".concat(u,".").concat(f)]||p[f]||s[f]||o;return t?n.createElement(y,i(i({ref:r},l),{},{components:t})):n.createElement(y,i({ref:r},l))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var m=2;m<o;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2467:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var n=t(87462),a=(t(67294),t(3905));const o={title:"Program to Perform Linear Search on Array",date:new Date("2020-08-16T11:36:00.000Z"),authors:"kaustubh",slug:"/program-to-perform-linear-search-on-array/"},i=void 0,c={permalink:"/blog/program-to-perform-linear-search-on-array/",source:"@site/blog/2020-08-16-program-to-perform-linear-search-on-array.md",title:"Program to Perform Linear Search on Array",description:"",date:"2020-08-16T11:36:00.000Z",formattedDate:"August 16, 2020",tags:[],readingTime:.265,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Program to Perform Linear Search on Array",date:"2020-08-16T11:36:00.000Z",authors:"kaustubh",slug:"/program-to-perform-linear-search-on-array/"},prevItem:{title:"Program for Binary Search in CPP",permalink:"/blog/program-for-binary-search-in-cpp/"},nextItem:{title:"Program to Find Minimum and Maximum Number from Given Array",permalink:"/blog/program-to-find-minimum-and-maximum-number-from-given-array/"}},u={authorsImageUrls:[void 0]},m=[],l={toc:m},p="wrapper";function s(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Linear.cpp"',title:'"Linear.cpp"'},'#include<iostream>  \nusing namespace std;  \nint main()  \n{  \n    int num,i,n,cnt=0,pos,c=0;  \n    cout<<"Enter array size :";  \n    cin>>n;  \n    cout<<"Enter array elements :";  \n    int arr[n];  \n    for(i=0;i   {  \n        cin>>arr[i];  \n    }  \n    cout<<"Enter element to search :";  \n    cin>>num;  \n    for(i=0;i   {  \n        if(num==arr[i])  \n        {  \n            cout<<"Found at :"<         c=1;  \n            break;  \n        }  \n        else{  \n        c=0;  \n        }  \n    }  \n    if(c==0){  \n        cout<<"Element not found!";  \n    }  \n}  \n  \n  \n\n')))}s.isMDXComponent=!0}}]);