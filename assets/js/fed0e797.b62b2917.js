"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[45655],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=l(t),m=a,d=p["".concat(c,".").concat(m)]||p[m]||f[m]||o;return t?r.createElement(d,i(i({ref:n},s),{},{components:t})):r.createElement(d,i({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u[p]="string"==typeof e?e:a,i[1]=u;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},31903:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={title:"Program for Priority Queue in CPP",date:new Date("2020-08-16T12:19:00.000Z"),authors:"kaustubh",slug:"/program-for-priority-queue-in-cpp/"},i=void 0,u={permalink:"/blog/program-for-priority-queue-in-cpp/",source:"@site/blog/2020-08-16-program-for-priority-queue-in-cpp.md",title:"Program for Priority Queue in CPP",description:"",date:"2020-08-16T12:19:00.000Z",formattedDate:"August 16, 2020",tags:[],readingTime:.76,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Program for Priority Queue in CPP",date:"2020-08-16T12:19:00.000Z",authors:"kaustubh",slug:"/program-for-priority-queue-in-cpp/"},prevItem:{title:"Create User Registration form using HTML",permalink:"/blog/create-user-registration-form-using-html/"},nextItem:{title:"Program for Deque Using Array",permalink:"/blog/program-for-deque-using-array/"}},c={authorsImageUrls:[void 0]},l=[],s={toc:l},p="wrapper";function f(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Queue.cpp"',title:'"Queue.cpp"'},'#include<iostream>\nusing namespace std;\n\nint rear=-1;\nint front=-1;\nint q[10];\n\nbool isfull()\n{\n    if(rear==9)\n    {\n        return 1;\n    }\n    else\n        return 0;\n}\nbool isempty()\n{\n    if(front==-1)\n    {\n        return 1;\n    }\n    else\n        return 0;\n}\nint display()\n{\n    if(isempty())\n    {\n        cout<<"Queue is empty!"<<endl;\n    }\n    else\n    {\n        for(int i=front;i<=rear;i++)\n        {\n            cout<<q[i]<<"->";\n        }\n    }\n}\nint main()\n{\n    int ch,data,count;\n    while(ch!=-1)\n    {\n        cout<<"n----MENU----"<<endl;\n        cout<<"1.Insert"<<endl;\n        cout<<"2.Delete"<<endl;\n        cout<<"3.Display"<<endl;\n        cout<<"4.Exit"<<endl;\n        cout<<"Enter a choice:";\n        cin>>ch;\n        switch(ch)\n        {\n            case 1:\n                int i;\n                if(isfull())\n                {\n                    cout<<"Queue is full!"<<endl;\n                    display();\n                    break;\n                }\n                else\n                {\n                    if(isempty())\n                    {\n                        front=0;\n                        cout<<"Enter a data:";\n                        cin>>data;\n                        q[front]=data;\n                        rear=0;\n                    }\n                    else\n                    {\n                        cout<<"Enter a data:";\n                        cin>>data;\n                        for(i=rear;i>=front;i--)\n                        {\n                            if(data>q[i])\n                            {\n                                q[i+1]=q[i];\n                            }\n                            else\n                            {\n                                break;\n                            }\n                        }   \n                        q[i+1]=data;\n                    rear=rear+1;\n                    }\n                display();  \n                break;\n                }\n            case 2:\n                if(isempty())\n                {\n                    cout<<"Queue underflow!"<<endl;\n                    break;  \n                }\n                else\n                {\n                    data=q[front];\n                    cout<<q[front]<<" is deleted!"<<endl;\n                    front=front+1;\n                    if(front>rear)\n                    {\n                        front=rear=-1;\n                    }\n                    display();\n                    break;\n                }\n            case 3:\n                display();\n                break;  \n            case 4:\n                exit(0);\n        }\n    }\n}\n\n')))}f.isMDXComponent=!0}}]);