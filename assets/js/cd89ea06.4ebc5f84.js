"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[74740],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>b});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=n.createContext({}),p=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(u.Provider,{value:r},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=p(t),m=o,b=s["".concat(u,".").concat(m)]||s[m]||f[m]||a;return t?n.createElement(b,i(i({ref:r},l),{},{components:t})):n.createElement(b,i({ref:r},l))}));function b(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c[s]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},89625:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=t(87462),o=(t(67294),t(3905));const a={title:"Program for Bubble Sort in CPP",slug:"/program-for-bubble-sort-in-cpp/",date:new Date("2020-08-16T12:08:00.000Z"),authors:"kaustubh"},i=void 0,c={permalink:"/blog/program-for-bubble-sort-in-cpp/",source:"@site/blog/2020-08-16-program-for-bubble-sort-in-cpp.md",title:"Program for Bubble Sort in CPP",description:"",date:"2020-08-16T12:08:00.000Z",formattedDate:"August 16, 2020",tags:[],readingTime:.28,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Program for Bubble Sort in CPP",slug:"/program-for-bubble-sort-in-cpp/",date:"2020-08-16T12:08:00.000Z",authors:"kaustubh"},prevItem:{title:"Program for Addition of Polynomial in CPP",permalink:"/blog/program-for-addition-of-polynomial-in-cpp/"},nextItem:{title:"Program for Quick Sort in CPP",permalink:"/blog/program-for-quick-sort-in-cpp/"}},u={authorsImageUrls:[void 0]},p=[],l={toc:p},s="wrapper";function f(e){let{components:r,...t}=e;return(0,o.kt)(s,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Bubble.cpp"',title:'"Bubble.cpp"'},'#include<iostream>\nusing namespace std;\nint main()\n{\n    int arr[10],i,n;\n    \n    cout<<"Enter array size :";\n    cin>>n;\n    cout<<"Enter  array elements :";\n    for(i=0;i<n;i++)\n    {\n        cin>>arr[i];\n        \n    }\n    cout<<"The array before sorting :";\n    for(int i=0;i<n;i++)\n    {\n        cout<<arr[i]<<"t";\n    }\n    cout<<endl<<"Array after sorting :";\n    for(i=0;i<n;i++)\n    {\n        for(int j=0;j<(n-i);j++)\n        {\n           int temp=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp;\n        }\n    }\n    for(int i=0;i<n;i++)\n    {\n        cout<<arr[i]<<"t";\n    }\n}\n\n\n')))}f.isMDXComponent=!0}}]);