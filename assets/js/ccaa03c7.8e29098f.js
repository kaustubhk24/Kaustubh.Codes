"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[57818],{3905:(n,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>m});var t=r(67294);function a(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function i(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,t)}return r}function u(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}function o(n,e){if(null==n)return{};var r,t,a=function(n,e){if(null==n)return{};var r,t,a={},i=Object.keys(n);for(t=0;t<i.length;t++)r=i[t],e.indexOf(r)>=0||(a[r]=n[r]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(t=0;t<i.length;t++)r=i[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(a[r]=n[r])}return a}var c=t.createContext({}),l=function(n){var e=t.useContext(c),r=e;return n&&(r="function"==typeof n?n(e):u(u({},e),n)),r},s=function(n){var e=l(n.components);return t.createElement(c.Provider,{value:e},n.children)},f="mdxType",p={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},d=t.forwardRef((function(n,e){var r=n.components,a=n.mdxType,i=n.originalType,c=n.parentName,s=o(n,["components","mdxType","originalType","parentName"]),f=l(r),d=a,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return r?t.createElement(m,u(u({ref:e},s),{},{components:r})):t.createElement(m,u({ref:e},s))}));function m(n,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=r.length,u=new Array(i);u[0]=d;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=n,o[f]="string"==typeof n?n:a,u[1]=o;for(var l=2;l<i;l++)u[l]=r[l];return t.createElement.apply(null,u)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},42120:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=r(87462),a=(r(67294),r(3905));const i={title:"Circular Queue Using Array in CPP",slug:"/circular-queue-using-array-in-cpp/",date:new Date("2020-08-16T12:17:00.000Z"),authors:"kaustubh"},u=void 0,o={permalink:"/blog/circular-queue-using-array-in-cpp/",source:"@site/blog/2020-08-16-circular-queue-using-array-in-cpp.md",title:"Circular Queue Using Array in CPP",description:"",date:"2020-08-16T12:17:00.000Z",formattedDate:"August 16, 2020",tags:[],readingTime:.81,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Circular Queue Using Array in CPP",slug:"/circular-queue-using-array-in-cpp/",date:"2020-08-16T12:17:00.000Z",authors:"kaustubh"},prevItem:{title:"Program for Deque Using Array",permalink:"/blog/program-for-deque-using-array/"},nextItem:{title:"Program for Linear Queue using Array in CPP",permalink:"/blog/program-for-linear-queue-using-array-in-cpp/"}},c={authorsImageUrls:[void 0]},l=[],s={toc:l},f="wrapper";function p(n){let{components:e,...r}=n;return(0,a.kt)(f,(0,t.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="circular.cpp"',title:'"circular.cpp"'},'#include<iostream>\nusing namespace std;\n\nint rear=-1;\nint front=-1;\nint q[10];\n\nbool isfull()\n{\n    if(front==(rear+1)%10)\n    {\n        return 1;\n    }\n    else\n        return 0;\n}\nbool isempty()\n{\n    if(front==-1)\n    {\n        return 1;\n    }\n    else\n        return 0;\n}\nint display()\n{\n    int f=front,r=rear;\n        if(isempty())\n        {\n            cout<<"Queue Underflow!"<<endl;\n        }\n        cout<<"Queue elements:n";\n        if(f<=r)\n            while(f<=r)\n        {\n            cout<<q[f]<<"->";\n            f++;\n        }\n        else\n        {\n            while(f<=9)\n        {\n            cout<<q[f]<<"->";\n            f++;\n        }\n        f=0;\n        while(f<=r)\n        {\n            cout<<q[f]<<"->";\n            f++;\n        }\n}\n}\nint main()\n{\n    int ch,data;\n    while(ch!=-1)\n    {\n        cout<<"n----MENU----"<<endl;\n        cout<<"1.Insert"<<endl;\n        cout<<"2.Delete"<<endl;\n        cout<<"3.Display"<<endl;\n        cout<<"4.Exit"<<endl;\n        cout<<"Enter a choice:";\n        cin>>ch;\n        switch(ch)\n        {\n            case 1:\n                if(isfull())\n                {\n                    cout<<"Queue is full!"<<endl;\n                    display();\n                    break;\n                }\n                else\n                {\n                    if(isempty())\n                    {\n                        front=0;\n                    }\n                    rear=(rear+1)%10;\n                    cout<<"Enter a data:";\n                    cin>>data;\n                    q[rear]=data;   \n                    display();\n                    break;\n                }\n            case 2:\n                if(isempty())\n                {\n                    cout<<"Queue underflow!"<<endl;\n                    break;  \n                }\n                else\n                {\n                    if(front==rear)\n                        {\n                        front=rear=-1;\n                        break;\n                        }\n                    else\n                        {\n                            if(front==9)\n                            {\n                                {\n                                data=q[front];\n                                cout<<q[front]<<" is deleted!"<<endl;\n                                front=0;\n                                break;\n                                }\n                            }\n                            else\n                            {\n                            data=q[front];\n                            cout<<q[front]<<" is deleted!"<<endl;       \n                            front=front+1;                          \n                            break;\n                            }\n                        }\n                }\n            case 3:\n                display();\n                break;  \n            case 4:\n                exit(0);\n        }\n    }\n}\n')))}p.isMDXComponent=!0}}]);