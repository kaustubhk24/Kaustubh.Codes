"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[16705],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"Lists In Python Interview Question",date:new Date("2021-04-17T04:22:04.000Z"),authors:"kaustubh",slug:"/lists-in-python-interview-question/"},i=void 0,l={permalink:"/blog/lists-in-python-interview-question/",source:"@site/blog/2021-04-17-lists-in-python-interview-question.md",title:"Lists In Python Interview Question",description:"Consider a list (list = []). You can perform the following commands:",date:"2021-04-17T04:22:04.000Z",formattedDate:"April 17, 2021",tags:[],readingTime:1.63,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Lists In Python Interview Question",date:"2021-04-17T04:22:04.000Z",authors:"kaustubh",slug:"/lists-in-python-interview-question/"},prevItem:{title:"Create a Python class named Circle constructed by a radius and two methods that will compute the area and the perimeter of a circle.",permalink:"/blog/create-a-python-class-named-circle-constructed-by-a-radius-and-two-methods-that-will-compute-the-area-and-the-perimeter-of-a-circle/"},nextItem:{title:"Program to copy the content of .jpg file into another file",permalink:"/blog/program-to-copy-the-content-of-jpg-file-into-another-file/"}},p={authorsImageUrls:[void 0]},s=[{value:"Answer",id:"answer",level:2}],u={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Consider a list (",(0,a.kt)("inlineCode",{parentName:"p"},"list = []"),"). You can perform the following commands:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"insert i e"),": Insert integer e  at position i."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"print"),": Print the list."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"remove e"),": Delete the first occurrence of integer e."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"append e"),": Insert integer e at the end of the list."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"sort"),": Sort the list."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"pop"),": Pop the last element from the list."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"reverse"),": Reverse the list.")),(0,a.kt)("p",null,"Initialize your list and read in the value of n followed by n lines of commands where each command will be of the 7 types listed above. Iterate through each command in order and perform the corresponding operation on your list."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example"),"\nN=4"),(0,a.kt)("p",null,"append 1"),(0,a.kt)("p",null,"append 2"),(0,a.kt)("p",null,"insert 3 1"),(0,a.kt)("p",null,"print "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[1, 3, 2]\n\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"input Format")),(0,a.kt)("p",null,"The first line contains an integer, , denoting the number of commands.\nEach line  of the  subsequent lines contains one of the commands described above."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The elements added to the list must be ",(0,a.kt)("em",{parentName:"li"},"integers"),".")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output Format")),(0,a.kt)("p",null,"For each command of type ",(0,a.kt)("inlineCode",{parentName:"p"},"print"),", print the list on a new line."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample input 0")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Output"',title:'"Output"'},"12\ninsert 0 5\ninsert 1 10\ninsert 0 6\nprint\nremove 6\nappend 9\nappend 1\nsort\nprint\npop\nreverse\nprint\n\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Output 0")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[6, 5, 10]\n[1, 5, 9, 10]\n[9, 5, 1]\n")),(0,a.kt)("h2",{id:"answer"},"Answer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="file.py"',title:'"file.py"'},'if __name__ == \'__main__\':\n N = int(input())\n commands = {\n "insert": lambda x, y, z: x.insert(y, z),\n "print": lambda x: print(x),\n "remove": lambda x, y: x.remove(y),\n "append": lambda x, y: x.append(y),\n "sort": lambda x: x.sort(),\n "pop": lambda x: x.pop(),\n "reverse": lambda x: x.reverse(),\n }\n out = []\n for i in range(N):\n a = input()\n split_a = a.split(\' \')\n command = split_a[0]\n try:\n commands[command](out, int(split_a[1]), int(split_a[2]))\n except IndexError:\n try:\n commands[command](out, int(split_a[1]))\n except IndexError:\n commands[command](out)\n\n')),(0,a.kt)("p",null," Copyrights"),(0,a.kt)("p",null," If you have any copyrights issues/complaints related to this article, you may send us mail at ",(0,a.kt)("a",{parentName:"p",href:"mailto:kaustubh@outlook.in"},"kaustubh@outlook.in"),", Also please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://blog.kaustubh.codes/terms-conditions/"},"Terms and Conditions")," and ",(0,a.kt)("a",{parentName:"p",href:"https://blog.kaustubh.codes/privacy-policy/"},"Privacy Policy.")))}c.isMDXComponent=!0}}]);