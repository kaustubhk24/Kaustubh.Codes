"use strict";(self.webpackChunkkaustubh=self.webpackChunkkaustubh||[]).push([[16595],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>y});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function u(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},s=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,y=p["".concat(c,".").concat(m)]||p[m]||f[m]||i;return r?t.createElement(y,o(o({ref:n},s),{},{components:r})):t.createElement(y,o({ref:n},s))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u[p]="string"==typeof e?e:a,o[1]=u;for(var l=2;l<i;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},66266:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>l});var t=r(87462),a=(r(67294),r(3905));const i={title:"Program for Linear Queue using Array in CPP",date:new Date("2020-08-16T12:16:00.000Z"),authors:"kaustubh",slug:"/program-for-linear-queue-using-array-in-cpp/"},o=void 0,u={permalink:"/blog/program-for-linear-queue-using-array-in-cpp/",source:"@site/blog/2020-08-16-program-for-linear-queue-using-array-in-cpp.md",title:"Program for Linear Queue using Array in CPP",description:"",date:"2020-08-16T12:16:00.000Z",formattedDate:"August 16, 2020",tags:[],readingTime:.65,hasTruncateMarker:!1,authors:[{name:"Kaustubh Kulkarni",title:"ServiceNow Developer",url:"https://github.com/kaustubhk24",imageURL:"https://www.gravatar.com/avatar/b76fcfc82fc2e8fdc8075636f1735f61?s=200",key:"kaustubh"}],frontMatter:{title:"Program for Linear Queue using Array in CPP",date:"2020-08-16T12:16:00.000Z",authors:"kaustubh",slug:"/program-for-linear-queue-using-array-in-cpp/"},prevItem:{title:"Circular Queue Using Array in CPP",permalink:"/blog/circular-queue-using-array-in-cpp/"},nextItem:{title:"Program for Stack Implementation using CPP",permalink:"/blog/program-for-stack-implementation-using-cpp/"}},c={authorsImageUrls:[void 0]},l=[],s={toc:l},p="wrapper";function f(e){let{components:n,...r}=e;return(0,a.kt)(p,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="linear.cpp"',title:'"linear.cpp"'},'#include<iostream>\nusing namespace std;\n\nint rear=-1;\nint front=-1;\nint q[10];\n\nbool isfull()\n{\n    if(rear==9)\n    {\n        return 1;\n    }\n    else\n        return 0;\n}\nbool isempty()\n{\n    if(front==-1)\n    {\n        return 1;\n    }\n    else\n        return 0;\n}\nint display()\n{\n    if(isempty())\n    {\n        cout<<"Queue is empty!"<<endl;\n    }\n    else\n    {\n        for(int i=front;i<=rear;i++)\n        {\n            cout<<q[i]<<"->";\n        }\n    }\n}\nint main()\n{\n    int ch,data;\n    while(ch!=-1)\n    {\n        cout<<"n----MENU----"<<endl;\n        cout<<"1.Insert"<<endl;\n        cout<<"2.Delete"<<endl;\n        cout<<"3.Display"<<endl;\n        cout<<"4.Exit"<<endl;\n        cout<<"Enter a choice:";\n        cin>>ch;\n        switch(ch)\n        {\n            case 1:\n                if(isfull())\n                {\n                    cout<<"Queue is full!"<<endl;\n                    display();\n                    break;\n                }\n                else\n                {\n                    if(isempty())\n                    {\n                        front=0;\n                    }\n                    rear=rear+1;\n                    cout<<"Enter a data:";\n                    cin>>data;\n                    q[rear]=data;   \n                    display();\n                    break;\n                }\n            case 2:\n                if(isempty())\n                {\n                    cout<<"Queue underflow!"<<endl;\n                    break;  \n                }\n                else\n                {\n                    data=q[front];\n                    cout<<q[front]<<" is deleted!"<<endl;\n                    front=front+1;\n                    if(front>rear)\n                    {\n                        front=rear=-1;\n                    }\n                    display();\n                    break;\n                }\n            case 3:\n                display();\n                break;  \n            case 4:\n                exit(0);\n        }\n    }\n}\n\n')))}f.isMDXComponent=!0}}]);